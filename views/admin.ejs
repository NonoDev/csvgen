<!DOCTYPE html>
<html lang="es">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Invemtec - Administración</title>
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/materialize/1.0.0/css/materialize.min.css">
    <link rel="stylesheet" href="/css/styles.css">
    <link href="https://fonts.googleapis.com/icon?family=Material+Icons" rel="stylesheet">
</head>
<body>
    <%- include('partials/navbaradmin') %>
    <script src="https://cdnjs.cloudflare.com/ajax/libs/materialize/1.0.0/js/materialize.min.js"></script>
    <div class="container">
        <h1 class="center-align">Panel de Administración</h1>
        
        <div class="center-align" style="margin-bottom: 20px;">
            <button class="btn waves-effect waves-light" onclick="window.location.reload();">Actualizar Listado</button>
            <a href="/logout" class="btn red waves-effect waves-light">Cerrar Sesión</a>
        </div>

        <div class="row">
            <div class="input-field col s6 offset-s3">
                <input id="search" type="text" class="validate">
                <label for="search">Buscar Expediente</label>
            </div>
        </div>

        <h3>Listado de Expedientes</h3>
        <table class="striped">
            <thead>
                <tr>
                    <th id="th-id" data-order="desc">ID <i class="material-icons" id="id-arrow">arrow_downward</i></th>
                    <th>Fecha</th>
                    <th>CSV</th>
                    <th>Expediente</th>
                    <th>QR</th>
                    <th class="right-align">Acciones</th>
                </tr>
            </thead>
            <tbody id="items-table-body">
                <!-- Los elementos se cargarán aquí dinámicamente -->
            </tbody>
        </table>
        
        <ul class="pagination center-align" id="pagination">
            <!-- Los botones de paginación se cargarán aquí dinámicamente -->
        </ul>
    </div>

    <!-- Modal Structure -->
    <div id="edit-modal" class="modal">
        <div class="modal-content">
            <h4>Editar Expediente</h4>
            <div class="row">
                <div class="input-field col s12">
                    <input id="modal-fecha" type="text" class="validate">
                    <label for="modal-fecha">Fecha</label>
                </div>
                <div class="input-field col s12">
                    <input id="modal-csv" type="text" class="validate">
                    <label for="modal-csv">CSV</label>
                </div>
                <div class="input-field col s12">
                    <input id="modal-expediente" type="text" class="validate">
                    <label for="modal-expediente">Expediente</label>
                </div>
            </div>
        </div>
        <div class="modal-footer">
            <button id="save-btn" class="modal-close waves-effect waves-green btn-flat">Guardar</button>
        </div>
    </div>

    <script>
        document.addEventListener('DOMContentLoaded', () => {
            let currentPage = 1;
            let currentOrderColumn = 'id';
            let currentOrderDirection = 'desc';
            let currentEditId = null;

            const loadItems = (page, query = '', orderColumn = 'id', orderDirection = 'desc') => {
                fetch(`/admin/items?page=${page}&query=${query}&orderColumn=${orderColumn}&orderDirection=${orderDirection}`)
                    .then(response => response.json())
                    .then(data => {
                        if (data.success) {
                            const tbody = document.getElementById('items-table-body');
                            tbody.innerHTML = '';

                            data.items.forEach(item => {
                                const row = document.createElement('tr');
                                row.setAttribute('data-id', item.id);

                                row.innerHTML = `
                                    <td>${item.id}</td>
                                    <td>
                                        <input type="text" value="${item.fecha ? new Date(item.fecha).toISOString().split('T')[0] : 'Fecha no válida'}" class="fecha-input" disabled>
                                        <i class="material-icons copy-icon" data-value="${item.fecha ? new Date(item.fecha).toISOString().split('T')[0] : 'Fecha no válida'}">content_copy</i>
                                    </td>
                                    <td>
                                        <input type="text" value="${item.csv}" class="csv-input" disabled>
                                        <i class="material-icons copy-icon" data-value="${item.csv}">content_copy</i>
                                    </td>
                                    <td>
                                        <input type="text" value="${item.expediente}" class="expediente-input" disabled>
                                        <i class="material-icons copy-icon" data-value="${item.expediente}">content_copy</i>
                                    </td>
                                    <td>
                                        <img src="data:image/png;base64,${item.qr_image}" alt="QR Code" style="width: 70px; height: 70px;">
                                    </td>
                                    <td class="right-align">
                                        <button class="btn blue lighten-2 edit-btn" data-id="${item.id}">Editar</button>
                                        <button class="btn red lighten-2 delete-btn" data-id="${item.id}">Eliminar</button>
                                    </td>
                                `;

                                tbody.appendChild(row);
                            });

                            setupCopyIcons();
                            setupEditButtons();
                            setupDeleteButtons();
                            setupPagination(data.totalPages, data.currentPage);
                        } else {
                            M.toast({html: 'Error al cargar los elementos'});
                        }
                    })
                    .catch(error => {
                        console.error('Error al cargar los elementos:', error);
                    });
            };

            const setupCopyIcons = () => {
                document.querySelectorAll('.copy-icon').forEach(icon => {
                    icon.addEventListener('click', () => {
                        const value = icon.getAttribute('data-value');
                        navigator.clipboard.writeText(value).then(() => {
                            M.toast({html: 'Texto copiado al portapapeles'});
                        }).catch(err => {
                            console.error('Error al copiar:', err);
                        });
                    });
                });
            };

            const setupEditButtons = () => {
                document.querySelectorAll('.edit-btn').forEach(button => {
                    button.addEventListener('click', () => {
                        const id = button.getAttribute('data-id');
                        currentEditId = id;
                        const row = document.querySelector(`tr[data-id="${id}"]`);
                        const fecha = row.querySelector('.fecha-input').value.trim();
                        const csv = row.querySelector('.csv-input').value.trim();
                        const expediente = row.querySelector('.expediente-input').value.trim();

                        document.getElementById('modal-fecha').value = fecha;
                        document.getElementById('modal-csv').value = csv;
                        document.getElementById('modal-expediente').value = expediente;

                        M.updateTextFields();
                        const modal = M.Modal.getInstance(document.getElementById('edit-modal'));
                        modal.open();
                    });
                });
            };

            document.getElementById('save-btn').addEventListener('click', () => {
                const id = currentEditId;
                const fecha = document.getElementById('modal-fecha').value.trim();
                const csv = document.getElementById('modal-csv').value.trim();
                const expediente = document.getElementById('modal-expediente').value.trim();

                fetch(`/admin/edit/${id}`, {
                    method: 'PUT',
                    headers: {
                        'Content-Type': 'application/json'
                    },
                    body: JSON.stringify({ csv, fecha, expediente })
                }).then(response => response.json()).then(data => {
                    if (data.success) {
                        M.toast({html: 'Elemento editado con éxito'});
                        loadItems(currentPage, '', currentOrderColumn, currentOrderDirection);
                    } else {
                        M.toast({html: 'Error al editar el elemento'});
                    }
                }).catch(error => {
                    console.error('Error al editar:', error);
                });
            });

            const setupDeleteButtons = () => {
                document.querySelectorAll('.delete-btn').forEach(button => {
                    button.addEventListener('click', () => {
                        const id = button.getAttribute('data-id');
                        if (confirm('¿Estás seguro de que deseas eliminar este elemento?')) {
                            fetch(`/admin/delete/${id}`, {
                                method: 'DELETE'
                            }).then(response => response.json()).then(data => {
                                if (data.success) {
                                    M.toast({html: 'Elemento eliminado con éxito'});
                                    loadItems(currentPage, '', currentOrderColumn, currentOrderDirection);
                                } else {
                                    M.toast({html: 'Error al eliminar el elemento'});
                                }
                            }).catch(error => {
                                console.error('Error al eliminar:', error);
                            });
                        }
                    });
                });
            };

            const setupPagination = (totalPages, currentPage) => {
                const pagination = document.getElementById('pagination');
                pagination.innerHTML = '';

                for (let i = 1; i <= totalPages; i++) {
                    const li = document.createElement('li');
                    li.classList.add('waves-effect');
                    if (i === currentPage) {
                        li.classList.add('active');
                    }

                    const a = document.createElement('a');
                    a.href = '#!';
                    a.innerText = i;
                    a.addEventListener('click', () => {
                        loadItems(i, '', currentOrderColumn, currentOrderDirection);
                    });

                    li.appendChild(a);
                    pagination.appendChild(li);
                }
            };

            document.getElementById('search').addEventListener('input', (event) => {
                const query = event.target.value.trim();
                loadItems(1, query, currentOrderColumn, currentOrderDirection);
            });

            document.getElementById('th-id').addEventListener('click', () => {
                currentOrderColumn = 'id';
                currentOrderDirection = document.getElementById('th-id').getAttribute('data-order') === 'desc' ? 'asc' : 'desc';
                document.getElementById('th-id').setAttribute('data-order', currentOrderDirection);
                document.getElementById('id-arrow').innerText = currentOrderDirection === 'desc' ? 'arrow_downward' : 'arrow_upward';
                loadItems(1, '', currentOrderColumn, currentOrderDirection);
            });

            loadItems(currentPage, '', currentOrderColumn, currentOrderDirection);

            // Initialize modal
            const elems = document.querySelectorAll('.modal');
            M.Modal.init(elems);
        });
    </script>
</body>
</html>