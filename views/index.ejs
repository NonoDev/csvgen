<!DOCTYPE html>
<html lang="es">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Invemtec - Generar CSV y QR</title>
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/materialize/1.0.0/css/materialize.min.css">
    <link rel="stylesheet" href="/css/styles.css">
</head>
<body>
    <%- include('partials/navbaradmin') %>
    <div class="row">
        <h2 class="titulo">Generar CSV y QR</h2>
        <div class="col l4 offset-l4 s10 offset-s1 z-depth-5">
            <div class="container" id="contenedor">
                <div id="result">
                    <h5>Código CSV:</h5>
                    <p id="csv-code"></p>
                    <h5>Código QR:</h5>
                    <div id="qrcode"></div>
                    <h5>Fecha de Registro:</h5>
                    <input type="text" id="registro-fecha" class="datepicker">
                    <h5>Número de Expediente:</h5>
                    <input type="text" id="expediente" class="validate">
                </div>
                <form id="action-form">
                    <div class="row">
                        <div class="col s4 offset-s2">
                            <button class="btn yellow accent-4 waves-effect waves-light" id="generate-btn" type="button">Generar</button>
                        </div>
                        <div class="col s4">
                            <button class="btn blue waves-effect waves-light" id="validate-store-btn" type="button">Guardar datos</button>
                        </div>
                    </div>
                </form>
            </div>
        </div>
    </div>
    <script src="https://cdnjs.cloudflare.com/ajax/libs/materialize/1.0.0/js/materialize.min.js"></script>
    <script src="https://cdnjs.cloudflare.com/ajax/libs/qrcode-generator/1.4.4/qrcode.min.js"></script>
    <script>
        document.addEventListener('DOMContentLoaded', function() {
            const dateElems = document.querySelectorAll('.datepicker');
            M.Datepicker.init(dateElems, {
                format: 'dd-mm-yyyy',
                autoClose: true
            });
        });

        function generateRandomString(length) {
            const characters = 'ABCDEFGHIJKLMNOPQRSTUVWXYZ0123456789';
            let result = '';
            for (let i = 0; i < length; i++) {
                result += characters.charAt(Math.floor(Math.random() * characters.length));
            }
            return result;
        }

        // Convertir una fecha en formato "dd-mm-yyyy" a "dd-mm-aaaa"
        // Aquí simplemente se conservan los guiones
        function formatDateToDDMMAAAA(fechaStr) {
            const parts = fechaStr.split('-'); // parts[0]: dd, parts[1]: mm, parts[2]: yyyy
            return `${parts[0]}-${parts[1]}-${parts[2]}`;
        }

        document.getElementById('generate-btn').addEventListener('click', function() {
            const now = new Date();
            let datePart = document.getElementById('registro-fecha').value;
            // Si no se seleccionó fecha, se usa la fecha actual en formato dd-mm-yyyy
            if (!datePart) {
                const day = String(now.getDate()).padStart(2,'0');
                const month = String(now.getMonth() + 1).padStart(2,'0');
                const year = now.getFullYear();
                datePart = `${day}-${month}-${year}`;
            }
            // Formateamos la fecha a "dd-mm-aaaa" conservando los guiones
            const formattedDate = formatDateToDDMMAAAA(datePart);

            const timePart = now.toTimeString().split(' ')[0]; // HH:MM:SS
            const timePartCleaned = timePart.replace(/:/g, '').substring(0, 4); // HHMM
            const randomPart = generateRandomString(12);
            // Para el código CSV se quitan los guiones
            const csv = formattedDate.replace(/-/g, '') + timePartCleaned + randomPart;
            const yearPart = now.getFullYear().toString();
            const expedienteInput = document.getElementById('expediente').value.trim();
            const expediente = expedienteInput || yearPart + generateRandomString(6);

            // Mostrar los datos en pantalla
            document.getElementById('csv-code').innerText = csv;
            // Se actualiza el campo de fecha manteniendo el formato con guiones
            document.getElementById('registro-fecha').value = formattedDate;
            document.getElementById('expediente').value = expediente;

            // Generar URL de verificación para el QR
            const verificationUrl = `${window.location.origin}/verify?csv=${encodeURIComponent(csv)}&fecha=${encodeURIComponent(formattedDate)}&expediente=${encodeURIComponent(expediente)}`;
            const qrcodeContainer = document.getElementById('qrcode');
            qrcodeContainer.innerHTML = ''; // Limpiar QR previo

            const qr = qrcode(0, 'L');
            qr.addData(verificationUrl);
            qr.make();
            qrcodeContainer.innerHTML = qr.createImgTag(4); // Tamaño de escala 4
        });

        document.getElementById('validate-store-btn').addEventListener('click', async () => {
            const csv = document.getElementById('csv-code').innerText;
            const fecha = document.getElementById('registro-fecha').value;
            const expediente = document.getElementById('expediente').value.trim();
            const qrcodeContainer = document.getElementById('qrcode');
            const qrImage = qrcodeContainer.querySelector('img').src;

            if (csv && fecha && expediente && qrImage) {
                try {
                    const response = await fetch('/generate', {
                        method: 'POST',
                        headers: { 'Content-Type': 'application/json' },
                        body: JSON.stringify({ csv, fecha, expediente, qr_image: qrImage })
                    });
                    const result = await response.json();
                    if (result.success) {
                        M.toast({html: 'Datos guardados con éxito!'});
                    } else {
                        M.toast({html: 'Error al guardar los datos'});
                    }
                } catch (error) {
                    console.error('Error al guardar los datos:', error);
                    M.toast({html: 'Error al guardar los datos'});
                }
            } else {
                alert('Por favor, genera primero los datos.');
            }
        });
    </script>
</body>
</html>